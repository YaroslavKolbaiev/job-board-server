type Query {
  job(id: ID!): Job
  company(id: ID!): Company
  jobs(limit: Int, offset: Int): JobSublist
}

type JobSublist {
  jobs: [Job!]
  totalItems: Int!
}

type Mutation {
  createNewJob(input: CreateJobInput!): Job
  deleteJob(id: ID!): Job
  updateJob(input: UpdateJobInput!): Job
  #   createUser(input: CreateUserInput!): User
}

"""
Represets Job posted to uor board
"""
type Job {
  id: ID!
  title: String!
  companyId: String
  company: Company
  description: String
  date: String!
}

type Company {
  id: ID!
  name: String!
  description: String
  jobs: [Job!]
}

input CreateJobInput {
  title: String!
  description: String
}

input UpdateJobInput {
  id: ID!
  title: String!
  description: String
}

# type User {
#   id: ID!
#   email: String!
#   companyId: String!
#   company: Company
#   jobs: [Job]
# }

# input CreateUserInput {
#   email: String!
#   password: String!
#   companyId: String!
# }
